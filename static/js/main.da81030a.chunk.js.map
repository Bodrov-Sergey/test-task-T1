{"version":3,"sources":["components/Pendulum.module.css","assets/load-anim.svg","utilits/Loader/Loader.jsx","assets/t1-logo.svg","utilits/mathScripts/mathScripts.js","components/Pendulum.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Loader","props","src","loader","alt","style","height","margin","display","getHalfPeriodLowAlpha","ropeLength","gravity","Math","round","PI","sqrt","getAlpha","startHeight","acos","Pendulum","useState","setRopeLength","setStartHeight","setGravity","alpha","setAlpha","intervalId","setIntervalId","disabled","setDisabled","disableSetter","setTimeout","prev","pendulumAction","clearInterval","setInterval","onRopeLengthChange","e","currentTarget","value","onStartHeightChange","onGravityChange","className","s","header","headerLogo","logo","headerTitle","headerName","settingsWrapper","settingsBlock","settingsItem","description","rangeSlider","type","min","max","step","onChange","onInput","rangeValue","rangeValueContent","actionButton","onClick","pendulumWrapper","transform","transition","pendulum","rope","ball","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da81030a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Pendulum_header__3MgzB\",\"headerLogo\":\"Pendulum_headerLogo__3p-AS\",\"headerTitle\":\"Pendulum_headerTitle__1wwzU\",\"headerName\":\"Pendulum_headerName__263vd\",\"settingsWrapper\":\"Pendulum_settingsWrapper__2M3ut\",\"settingsBlock\":\"Pendulum_settingsBlock__2hcnZ\",\"description\":\"Pendulum_description__3OHU9\",\"settingsItem\":\"Pendulum_settingsItem__2HqaI\",\"rangeSlider\":\"Pendulum_rangeSlider__AmQpK\",\"rangeValue\":\"Pendulum_rangeValue__1l3Rt\",\"actionButton\":\"Pendulum_actionButton__pywMF\",\"pendulumWrapper\":\"Pendulum_pendulumWrapper__3cD8y\",\"pendulum\":\"Pendulum_pendulum__33aVE\",\"rope\":\"Pendulum_rope__20yVT\",\"ball\":\"Pendulum_ball__3YvYQ\"};","export default __webpack_public_path__ + \"static/media/load-anim.44fe423f.svg\";","import React from \"react\";\r\nimport loader from '../../assets/load-anim.svg'\r\n\r\nconst Loader = (props) => {\r\n    return (\r\n            <img src={loader} alt={\"loader\"} style={{height: props.height, margin: \"0 auto\", display: \"block\" } }/>\r\n    )\r\n}\r\nexport default Loader;","export default __webpack_public_path__ + \"static/media/t1-logo.b2cc292b.svg\";","export const getHalfPeriodLowAlpha = (ropeLength, gravity) => {\r\n    // Getting the period using formula from physics\r\n    return Math.round(2 * Math.PI * Math.sqrt(ropeLength / gravity) / 2 * 1000);\r\n}\r\nexport const getAlpha = (ropeLength, startHeight) => {\r\n    // Getting alpha angle by acos and converting radians\r\n    return (Math.acos((ropeLength - startHeight) / ropeLength) * 180) / Math.PI\r\n}","import React, {useState} from \"react\";\r\nimport s from \"./Pendulum.module.css\"\r\nimport Loader from \"../utilits/Loader/Loader\";\r\nimport logo from \"../assets/t1-logo.svg\"\r\nimport {getHalfPeriodLowAlpha, getAlpha} from \"../utilits/mathScripts/mathScripts\";\r\n\r\nconst Pendulum = (props) => {\r\n    const [ropeLength, setRopeLength] = useState(1);\r\n    const [startHeight, setStartHeight] = useState(0.3);\r\n    const [gravity, setGravity] = useState(9.8);\r\n    const [alpha, setAlpha] = useState(getAlpha(ropeLength, startHeight));\r\n    const [intervalId, setIntervalId] = useState(null);\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n\r\n    //\r\n    //Pendulum control functions\r\n    //\r\n    const disableSetter = () => {\r\n        setDisabled(true);\r\n        setTimeout(() => {setDisabled(false)}, 300);\r\n        alpha < 0 && setAlpha(prev => prev * -1);\r\n    }\r\n    const pendulumAction = () => {\r\n        if (!intervalId) {\r\n            setAlpha(prev => prev * -1);\r\n            setIntervalId(setInterval(() => {\r\n                setAlpha(prev => prev * -1);\r\n            }, getHalfPeriodLowAlpha(ropeLength, gravity)));\r\n        } else {\r\n            setIntervalId(clearInterval(intervalId));\r\n            disableSetter();\r\n        }\r\n    }\r\n\r\n    //\r\n    //Onchange range functions\r\n    //\r\n    const onRopeLengthChange = (e) => {\r\n        intervalId ? pendulumAction() : disableSetter();\r\n        if (+e.currentTarget.value < +startHeight) {\r\n            setStartHeight(e.currentTarget.value);\r\n            setRopeLength(e.currentTarget.value);\r\n            setAlpha(getAlpha(e.currentTarget.value, e.currentTarget.value));\r\n\r\n        } else {\r\n            setRopeLength(e.currentTarget.value);\r\n            setAlpha(getAlpha(e.currentTarget.value, startHeight));\r\n        }\r\n    }\r\n    const onStartHeightChange = (e) => {\r\n        intervalId ? pendulumAction() : disableSetter();\r\n        setStartHeight(e.currentTarget.value);\r\n        setAlpha(getAlpha(ropeLength, e.currentTarget.value));\r\n    }\r\n    const onGravityChange = (e) => {\r\n        intervalId ? pendulumAction() : disableSetter();\r\n        setGravity(e.currentTarget.value)\r\n        setAlpha(getAlpha(ropeLength, startHeight));\r\n    }\r\n\r\n    return <div>\r\n        <header className={s.header}>\r\n            <img className={s.headerLogo} alt={\"T1 Консалтинг логотип\"} src={logo} />\r\n            <h1 className={s.headerTitle}>Приложение \"Маятник\"</h1>\r\n            <h2 className={s.headerName}>Бодров Сергей</h2>\r\n        </header>\r\n        <section className={s.settingsWrapper}>\r\n            <div className={s.settingsBlock}>\r\n                <div className={s.settingsItem}>\r\n                    <div className={s.description}>Длина подвеса маятника</div>\r\n                    <input className={s.rangeSlider} type={\"range\"} min={1} max={10} step={0.1}\r\n                           onChange={onRopeLengthChange} onInput={onRopeLengthChange} value={ropeLength}/>\r\n                    <span className={s.rangeValue}>{ropeLength} метр(а)</span>\r\n\r\n                </div>\r\n                <div className={s.settingsItem}>\r\n                    <div className={s.description}>Высота исходной позиции шара</div>\r\n                    <input className={s.rangeSlider} type={\"range\"} min={0} max={ropeLength} step={0.1}\r\n                           onInput={onStartHeightChange} onChange={onStartHeightChange}\r\n                           value={startHeight}/>\r\n                    <div className={s.rangeValue}><p className={s.rangeValueContent}>{startHeight} метр(а)</p></div>\r\n                </div>\r\n                <div className={s.settingsItem}>\r\n                    <div className={s.description}>Сила притяжения</div>\r\n                    <input className={s.rangeSlider} type={\"range\"} min={0.2} max={15} step={0.2}\r\n                           onChange={onGravityChange} onInput={onGravityChange} value={gravity}/>\r\n                    <div className={s.rangeValue}><p\r\n                        className={s.rangeValueContent}>{gravity} метр(а)/секунду <sup>2</sup></p></div>\r\n                </div>\r\n            </div>\r\n            {disabled ? <Loader height={\"40px\"}/> :\r\n                <button className={s.actionButton} disabled={disabled}\r\n                        onClick={pendulumAction}>{intervalId ? \"Вернуть маятник в исходное положение\" : \"Запустить маятник\"}</button>}\r\n        </section>\r\n\r\n\r\n        <section className={s.pendulumWrapper}>\r\n            <div style={{\r\n                transform: `rotate(${disabled ? alpha - 0.0000000001 : alpha}deg)`,\r\n                transition: `${!intervalId? 300+\"ms ease\" :getHalfPeriodLowAlpha(ropeLength, gravity)+\"ms ease-in-out\"}`\r\n            }} className={s.pendulum}>\r\n                <div className={s.rope}>\r\n                    <span>.</span>\r\n                    <span className={s.ball}> </span>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n}\r\n\r\nexport default Pendulum;","import './App.css';\nimport './zeroing.css'\nimport Pendulum from \"./components/Pendulum\";\n\n\nconst App = ()=>{\n\n  return <Pendulum />\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}